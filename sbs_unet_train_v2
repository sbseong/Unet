from model import *
from data_ca import *

data_gen_args = dict(rotation_range=0.2,
                    width_shift_range=0.05,
                    height_shift_range=0.05,
                    shear_range=0.05,
                    zoom_range=0.05,
                    horizontal_flip=True,
                    fill_mode='nearest')

#myGene = trainGenerator(2,'data/calcium/train/aug','image','label',data_gen_args,save_to_dir = None)

model = unet()
model_checkpoint = ModelCheckpoint('unet_calcium_190311_aug.hdf5', monitor='loss',verbose=1, save_best_only=True)
#model.fit_generator(myGene,steps_per_epoch=2000,epochs=1,callbacks=[model_checkpoint])

#testGene = testGenerator("data/calcium/test")
#results = model.predict_generator(testGene,22,verbose=1)
#saveResult("data/calcium/test_190311",results)

imgs_train,imgs_mask_train = geneTrainNpy("data/calcium/train/aug/","data/calcium/train/aug/")

model.fit(imgs_train, imgs_mask_train, batch_size=2, nb_epoch=1, verbose=1, validation_split=0.2, shuffle=True, callbacks=[model_checkpoint])
testGene = testGenerator("data/calcium/test")
results = model.predict_generator(testGene,22,verbose=1)

saveResult("data/calcium/test_190311",results)